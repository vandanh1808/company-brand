import mongoose, { Document, InferSchemaType, Model, Schema } from "mongoose";
// ðŸ‘‡ thÃªm dÃ²ng nÃ y Ä‘á»ƒ Ä‘áº£m báº£o model Company Ä‘Æ°á»£c register
import "./Company";

export interface IBrand extends Document {
	name: string;
	description?: string;
	logo?: string;
	companyId: mongoose.Types.ObjectId;
	createdAt: Date;
	updatedAt: Date;
}

const BrandSchema: Schema = new Schema(
	{
		name: {
			type: String,
			required: [true, "TÃªn thÆ°Æ¡ng hiá»‡u lÃ  báº¯t buá»™c"],
			trim: true,
			maxlength: [100, "TÃªn thÆ°Æ¡ng hiá»‡u khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 100 kÃ½ tá»±"],
		},
		description: {
			type: String,
			maxlength: [500, "MÃ´ táº£ thÆ°Æ¡ng hiá»‡u khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 500 kÃ½ tá»±"],
		},
		logo: {
			type: String,
			default: null,
		},
		companyId: {
			type: Schema.Types.ObjectId,
			ref: "Company",
			required: [true, "ID cÃ´ng ty lÃ  báº¯t buá»™c"],
		},
	},
	{
		timestamps: true,
	}
);

export type BrandDoc = InferSchemaType<typeof BrandSchema>;
const Brand: Model<BrandDoc> =
	mongoose.models.Brand || mongoose.model<BrandDoc>("Brand", BrandSchema);

export default Brand;
